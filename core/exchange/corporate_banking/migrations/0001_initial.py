# Generated by Django 4.2.16 on 2025-01-07 18:49

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import exchange.base.calendar


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('wallet', '0137_add_tx_datetime_field_to_confirmedwalletdeposit'),
        ('accounts', '0176_alter_filed_objec_id_useractionlog'),
    ]

    operations = [
        migrations.CreateModel(
            name='CoBankAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider_is_active', models.BooleanField(default=True)),
                (
                    'provider_bank_id',
                    models.IntegerField(help_text='Our bank account database ID belonging to provider'),
                ),
                (
                    'bank',
                    models.SmallIntegerField(
                        choices=[
                            (10, 'بانک\u200cمرکزی'),
                            (11, 'صنعت\u200cو\u200cمعدن'),
                            (12, 'ملت'),
                            (13, 'رفاه'),
                            (14, 'مسکن'),
                            (15, 'سپه'),
                            (16, 'کشاورزی'),
                            (17, 'ملی'),
                            (18, 'تجارت'),
                            (19, 'صادرات'),
                            (20, 'توسعه\u200cصادرات'),
                            (21, 'پست\u200cبانک'),
                            (22, 'توسعه\u200cتعاون'),
                            (51, 'موسسه\u200cاعتباری\u200cتوسعه'),
                            (52, 'قوامین'),
                            (53, 'کار\u200cآفرین'),
                            (54, 'پارسیان'),
                            (55, 'اقتصاد\u200cنوین'),
                            (56, 'سامان'),
                            (57, 'پاسارگاد'),
                            (58, 'سرمایه'),
                            (59, 'سینا'),
                            (60, 'مهر\u200cایران'),
                            (61, 'شهر'),
                            (62, 'آینده'),
                            (63, 'انصار'),
                            (64, 'گردشگری'),
                            (65, 'حکمت\u200cایرانیان'),
                            (66, 'دی'),
                            (69, 'ایران\u200cزمین'),
                            (70, 'رسالت'),
                            (73, 'کوثر'),
                            (75, 'موسسه\u200cملل'),
                            (78, 'خاورمیانه'),
                            (80, 'موسسه\u200cنور'),
                            (997, 'پی'),
                            (998, 'جیبیت'),
                            (999, 'وندار'),
                        ]
                    ),
                ),
                ('iban', models.CharField(max_length=26)),
                ('account_number', models.CharField(max_length=25)),
                ('account_owner', models.CharField(blank=True, max_length=200, null=True)),
                ('opening_date', models.DateTimeField(blank=True, null=True)),
                ('provider', models.SmallIntegerField(choices=[(0, 'Toman'), (1, 'Jibit'), (2, 'Vandar')], default=0)),
                ('is_active', models.BooleanField(default=False)),
                ('transfer_mode', models.SmallIntegerField(choices=[(1, 'بین بانکی'), (2, 'درون بانکی')], default=2)),
                ('account_tp', models.SmallIntegerField(choices=[(1, 'عملیاتی برای واریز'), (2, 'مخزن برای برداشت')])),
                ('is_deleted', models.BooleanField(default=False)),
                ('deails', models.JSONField(default=dict)),
                ('balance', models.DecimalField(blank=True, decimal_places=10, max_digits=31, null=True)),
            ],
            options={
                'verbose_name': 'حساب\u200cهای نزد کوبنک',
                'verbose_name_plural': 'حساب\u200cهای نزد کوبنک',
            },
        ),
        migrations.CreateModel(
            name='CoBankStatement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=10, max_digits=22)),
                ('tp', models.SmallIntegerField(choices=[(1, 'واریز'), (2, 'برداشت'), (3, 'نامشخص')])),
                (
                    'tracing_number',
                    models.CharField(db_index=True, help_text='Bank-assigned tracing number.', max_length=100),
                ),
                (
                    'transaction_datetime',
                    models.DateTimeField(help_text='Date and time when the bank recorded this transaction.'),
                ),
                ('payment_id', models.CharField(blank=True, max_length=100, null=True)),
                (
                    'source_account',
                    models.CharField(help_text='The account from which the transaction was initiated.', max_length=25),
                ),
                (
                    'status',
                    models.SmallIntegerField(
                        choices=[(1, 'New'), (2, 'Validated'), (3, 'Executed'), (4, 'Rejected')], default=1
                    ),
                ),
                (
                    'rejection_reason',
                    models.SmallIntegerField(
                        blank=True,
                        choices=[
                            (1, 'User not eligible for cobank'),
                            (2, 'Source bank account not found'),
                            (3, 'Source account belongs to more than one users'),
                            (4, 'Other'),
                        ],
                        null=True,
                    ),
                ),
                (
                    'created_at',
                    models.DateTimeField(
                        default=exchange.base.calendar.ir_now,
                        help_text='The time this item is inserted in our database.',
                    ),
                ),
                (
                    'destination_account',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING, to='corporate_banking.cobankaccount'
                    ),
                ),
            ],
            options={
                'verbose_name': 'صورت\u200cحساب\u200cهای کوبنک',
                'verbose_name_plural': 'صورت\u200cحساب\u200cهای کوبنک',
            },
        ),
        migrations.CreateModel(
            name='CoBankUserDeposit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=10, max_digits=22)),
                ('fee', models.DecimalField(decimal_places=10, max_digits=22)),
                ('created_at', models.DateTimeField(default=exchange.base.calendar.ir_now, verbose_name='زمان')),
                (
                    'cobank_statement',
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='deposit',
                        to='corporate_banking.cobankstatement',
                    ),
                ),
                (
                    'transaction',
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wallet.transaction'),
                ),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                (
                    'user_bank_account',
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.bankaccount'),
                ),
            ],
            options={
                'verbose_name': 'واریزهای کاربری کوبنک',
                'verbose_name_plural': 'واریزهای کاربری کوبنک',
            },
        ),
        migrations.AddConstraint(
            model_name='cobankaccount',
            constraint=models.UniqueConstraint(
                fields=('bank', 'iban', 'account_number', 'provider'), name='unique_bank_account'
            ),
        ),
        migrations.AddIndex(
            model_name='cobankstatement',
            index=models.Index(
                models.F('tp'),
                models.F('source_account'),
                models.F('transaction_datetime'),
                name='cobankstatement_search_index',
            ),
        ),
    ]
