# Generated by Django 2.1.4 on 2018-12-12 19:37

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wallet', '0001_nobitex2018'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('order_type', models.IntegerField(choices=[(1, 'Sell'), (2, 'Buy')])),
                ('src_currency', models.IntegerField(choices=[(0, 'unknown'), (1, 'USD'), (2, '﷼'), (10, 'Bitcoin'), (11, 'Etherium'), (12, 'Litecoin')])),
                ('dst_currency', models.IntegerField(choices=[(0, 'unknown'), (1, 'USD'), (2, '﷼'), (10, 'Bitcoin'), (11, 'Etherium'), (12, 'Litecoin')])),
                ('price', models.DecimalField(decimal_places=10, max_digits=20)),
                ('amount', models.DecimalField(decimal_places=10, max_digits=20)),
                ('status', models.IntegerField(choices=[(0, 'New'), (1, 'Active'), (2, 'Done'), (3, 'Canceled')], default=0)),
                ('matched_amount', models.DecimalField(decimal_places=10, default=0, max_digits=20)),
                ('fee', models.DecimalField(decimal_places=10, default=0, max_digits=20)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrderMatching',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True)),
                ('matched_price', models.DecimalField(decimal_places=10, max_digits=20)),
                ('matched_amount', models.DecimalField(decimal_places=10, max_digits=20)),
                ('buy_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='market.Order')),
                ('sell_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='market.Order')),
                ('buy_fee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wallet.Transaction')),
                ('sell_fee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wallet.Transaction')),
            ],
        ),
        migrations.AlterField(
            model_name='order',
            name='status',
            field=models.IntegerField(choices=[(0, 'New'), (1, 'Active'), (2, 'Done'), (3, 'Canceled')], db_index=True, default=0),
        ),
        migrations.AlterIndexTogether(
            name='order',
            index_together={('src_currency', 'dst_currency')},
        ),
        migrations.CreateModel(
            name='MarketData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('src_currency', models.IntegerField(choices=[(0, 'unknown'), (1, 'USD'), (2, '﷼'), (10, 'Bitcoin'), (11, 'Etherium'), (12, 'Litecoin')])),
                ('dst_currency', models.IntegerField(choices=[(0, 'unknown'), (1, 'USD'), (2, '﷼'), (10, 'Bitcoin'), (11, 'Etherium'), (12, 'Litecoin')])),
                ('date', models.DateField(db_index=True)),
                ('hour', models.IntegerField()),
                ('open_price', models.DecimalField(decimal_places=10, default=0, max_digits=20)),
                ('close_price', models.DecimalField(decimal_places=10, default=0, max_digits=20)),
                ('low_price', models.DecimalField(decimal_places=10, default=0, max_digits=20)),
                ('high_price', models.DecimalField(decimal_places=10, default=0, max_digits=20)),
                ('trade_amount', models.DecimalField(decimal_places=10, default=0, max_digits=20)),
                ('trade_total', models.DecimalField(decimal_places=10, default=0, max_digits=20)),
            ],
            options={
                'verbose_name': 'Market Data',
                'verbose_name_plural': 'Market Data',
            },
        ),
        migrations.AlterUniqueTogether(
            name='marketdata',
            unique_together={('src_currency', 'dst_currency', 'date', 'hour')},
        ),
        migrations.CreateModel(
            name='SymbolInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('src_currency', models.IntegerField(choices=[(0, 'unknown'), (1, 'USD'), (2, '﷼'), (10, 'Bitcoin'), (11, 'Ethereum'), (12, 'Litecoin'), (13, 'Tether'), (21, 'Cardano')])),
                ('dst_currency', models.IntegerField(choices=[(0, 'unknown'), (1, 'USD'), (2, '﷼'), (10, 'Bitcoin'), (11, 'Ethereum'), (12, 'Litecoin'), (13, 'Tether'), (21, 'Cardano')])),
                ('name', models.CharField(max_length=100)),
                ('ticker', models.CharField(max_length=100)),
                ('description', models.CharField(default='', max_length=255)),
                ('type', models.CharField(choices=[('crypto-currency', 'Crypto Currency'), ('flat-currency', 'Flat Currency')], max_length=20)),
                ('session', models.CharField(default='24x7', max_length=100)),
                ('exchange', models.CharField(default='Nobitex', max_length=100)),
                ('list_exchange', models.CharField(blank=True, max_length=300, null=True)),
                ('timezone', models.CharField(default='Asia/Tehran', max_length=40)),
                ('minmov', models.PositiveIntegerField(default=1)),
                ('pricescale', models.PositiveIntegerField(default=100)),
                ('minmove2', models.PositiveIntegerField(default=0)),
                ('fractional', models.BooleanField(default=False)),
                ('has_intraday', models.BooleanField(default=True)),
                ('supported_resolutions', models.CharField(default='["60"]', max_length=255)),
                ('intraday_multipliers', models.CharField(default='["60"]', max_length=255)),
                ('has_seconds', models.BooleanField(default=False)),
                ('seconds_multipliers', models.CharField(default='[]', max_length=255)),
                ('has_daily', models.BooleanField(default=False)),
                ('has_weekly_and_monthly', models.BooleanField(default=False)),
                ('has_empty_bars', models.BooleanField(default=False)),
                ('force_session_rebuild', models.BooleanField(default=True)),
                ('has_no_volume', models.BooleanField(default=False)),
                ('volume_precision', models.PositiveIntegerField(default=0)),
                ('data_status', models.CharField(choices=[('streaming', 'streaming'), ('endofday', 'endofday'), ('pulsed', 'pulsed'), ('delayed_streaming', 'delayed_streaming')], max_length=40)),
                ('expired', models.BooleanField(default=False)),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('sector', models.CharField(default='Industrial', max_length=100)),
                ('industry', models.CharField(default='Business Support Services', max_length=100)),
                ('currency_code', models.CharField(default='﷼', max_length=100)),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='symbolinfo',
            unique_together={('name', 'exchange')},
        ),
        migrations.CreateModel(
            name='AutoTradingPermit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('options', models.TextField(default='{}')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('values', models.TextField(default='{}')),
            ],
            options={
                'verbose_name': 'دستور معامله\u200cی خودکار',
                'verbose_name_plural': 'دستور معامله\u200cی خودکار',
            },
        ),
        migrations.AlterField(
            model_name='marketdata',
            name='dst_currency',
            field=models.IntegerField(choices=[(0, 'unknown'), (1, 'USD'), (2, '﷼'), (10, 'Bitcoin'), (11, 'Etherium'), (12, 'Litecoin'), (13, 'Tether(omni)')]),
        ),
        migrations.AlterField(
            model_name='marketdata',
            name='src_currency',
            field=models.IntegerField(choices=[(0, 'unknown'), (1, 'USD'), (2, '﷼'), (10, 'Bitcoin'), (11, 'Etherium'), (12, 'Litecoin'), (13, 'Tether(omni)')]),
        ),
        migrations.AlterField(
            model_name='order',
            name='dst_currency',
            field=models.IntegerField(choices=[(0, 'unknown'), (1, 'USD'), (2, '﷼'), (10, 'Bitcoin'), (11, 'Etherium'), (12, 'Litecoin'), (13, 'Tether(omni)')]),
        ),
        migrations.AlterField(
            model_name='order',
            name='src_currency',
            field=models.IntegerField(choices=[(0, 'unknown'), (1, 'USD'), (2, '﷼'), (10, 'Bitcoin'), (11, 'Etherium'), (12, 'Litecoin'), (13, 'Tether(omni)')]),
        ),
        migrations.AddField(
            model_name='order',
            name='description',
            field=models.CharField(blank=True, default='', max_length=1000),
        ),
        migrations.CreateModel(
            name='KrakenTrade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('txid', models.CharField(max_length=400)),
                ('descr', models.CharField(max_length=500)),
                ('matching', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='market.OrderMatching')),
            ],
        ),
        migrations.CreateModel(
            name='KrakenTradeLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('status', models.IntegerField(default=0)),
                ('description', models.CharField(blank=True, default='', max_length=1000)),
                ('kraken_trade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='market.KrakenTrade')),
                ('matching', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.OrderMatching')),
            ],
        ),
        migrations.AddField(
            model_name='ordermatching',
            name='buy_deposit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wallet.Transaction'),
        ),
        migrations.AddField(
            model_name='ordermatching',
            name='buy_withdraw',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wallet.Transaction'),
        ),
        migrations.AddField(
            model_name='ordermatching',
            name='sell_deposit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wallet.Transaction'),
        ),
        migrations.AddField(
            model_name='ordermatching',
            name='sell_withdraw',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wallet.Transaction'),
        ),
        migrations.CreateModel(
            name='ReferralFee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('amount', models.DecimalField(decimal_places=10, default=0, max_digits=20)),
            ],
            options={
                'verbose_name': 'کارمزد ارجاع مشتری',
                'verbose_name_plural': 'کارمزد ارجاع مشتری',
            },
        ),
        migrations.AlterModelOptions(
            name='ordermatching',
            options={'verbose_name': 'معامله', 'verbose_name_plural': 'معامله'},
        ),
        migrations.AddField(
            model_name='referralfee',
            name='matching',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='market.OrderMatching'),
        ),
        migrations.AddField(
            model_name='referralfee',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referral_fees', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='referralfee',
            name='is_calculated',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='referralfee',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, db_index=True),
        ),
        migrations.CreateModel(
            name='UserTradeStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month_trades_count', models.IntegerField(default=0)),
                ('month_trades_total', models.DecimalField(decimal_places=10, default=0, max_digits=25)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='month_trades_status', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'آمار معاملات ماهانه کاربران',
                'verbose_name_plural': 'آمار معاملات ماهانه کاربران',
            },
        ),
        migrations.AlterField(
            model_name='marketdata',
            name='dst_currency',
            field=models.IntegerField(choices=[(0, 'unknown'), (1, 'USD'), (2, '﷼'), (10, 'Bitcoin'), (11, 'Etherium'), (12, 'Litecoin'), (13, 'Tether(omni)'), (21, 'Cardano')]),
        ),
        migrations.AlterField(
            model_name='marketdata',
            name='src_currency',
            field=models.IntegerField(choices=[(0, 'unknown'), (1, 'USD'), (2, '﷼'), (10, 'Bitcoin'), (11, 'Etherium'), (12, 'Litecoin'), (13, 'Tether(omni)'), (21, 'Cardano')]),
        ),
        migrations.AlterField(
            model_name='order',
            name='dst_currency',
            field=models.IntegerField(choices=[(0, 'unknown'), (1, 'USD'), (2, '﷼'), (10, 'Bitcoin'), (11, 'Etherium'), (12, 'Litecoin'), (13, 'Tether(omni)'), (21, 'Cardano')]),
        ),
        migrations.AlterField(
            model_name='order',
            name='src_currency',
            field=models.IntegerField(choices=[(0, 'unknown'), (1, 'USD'), (2, '﷼'), (10, 'Bitcoin'), (11, 'Etherium'), (12, 'Litecoin'), (13, 'Tether(omni)'), (21, 'Cardano')]),
        ),
        migrations.CreateModel(
            name='BinanceTrade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_order_id', models.CharField(max_length=400)),
                ('matching', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='market.OrderMatching')),
            ],
        ),
        migrations.CreateModel(
            name='BinanceTradeLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('status', models.IntegerField(default=0)),
                ('description', models.CharField(blank=True, default='', max_length=1000)),
                ('binance_trade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='market.BinanceTrade')),
                ('matching', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.OrderMatching')),
            ],
        ),
        migrations.AddField(
            model_name='krakentrade',
            name='status',
            field=models.IntegerField(choices=[(0, 'New'), (1, 'Failed'), (2, 'Done'), (3, 'Canceled'), (4, 'Check')], default=0),
        ),
        migrations.AddField(
            model_name='binancetrade',
            name='fills',
            field=models.CharField(default='[]', max_length=1000),
        ),
        migrations.CreateModel(
            name='Market',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('src_currency', models.IntegerField(choices=[(0, 'unknown'), (1, 'USD'), (2, '﷼'), (10, 'Bitcoin'), (11, 'Ethereum'), (12, 'Litecoin'), (13, 'Tether'), (21, 'Cardano')], verbose_name='ارز مبدا')),
                ('dst_currency', models.IntegerField(choices=[(0, 'unknown'), (1, 'USD'), (2, '﷼'), (10, 'Bitcoin'), (11, 'Ethereum'), (12, 'Litecoin'), (13, 'Tether'), (21, 'Cardano')], verbose_name='ارز مقصد')),
                ('is_active', models.BooleanField(default=False, verbose_name='فعال؟')),
            ],
            options={
                'verbose_name': 'بازار',
                'verbose_name_plural': 'بازار',
            },
        ),
        migrations.AddField(
            model_name='binancetrade',
            name='status',
            field=models.IntegerField(choices=[(0, 'New'), (1, 'Failed'), (2, 'Done'), (3, 'Canceled'), (4, 'Check')], default=0),
        ),
        migrations.AddField(
            model_name='order',
            name='execution_type',
            field=models.IntegerField(choices=[(1, 'Limit'), (2, 'Market')], default=1),
        ),
        migrations.AlterModelOptions(
            name='order',
            options={'verbose_name': 'سفارش', 'verbose_name_plural': 'سفارش'},
        ),
        migrations.AlterField(
            model_name='marketdata',
            name='dst_currency',
            field=models.IntegerField(choices=[(0, 'unknown'), (1, 'USD'), (2, '﷼'), (10, 'Bitcoin'), (11, 'Ethereum'), (12, 'Litecoin'), (13, 'Tether'), (21, 'Cardano')]),
        ),
        migrations.AlterField(
            model_name='marketdata',
            name='src_currency',
            field=models.IntegerField(choices=[(0, 'unknown'), (1, 'USD'), (2, '﷼'), (10, 'Bitcoin'), (11, 'Ethereum'), (12, 'Litecoin'), (13, 'Tether'), (21, 'Cardano')]),
        ),
        migrations.AlterField(
            model_name='order',
            name='amount',
            field=models.DecimalField(decimal_places=10, max_digits=20, verbose_name='مقدار ارز'),
        ),
        migrations.AlterField(
            model_name='order',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='تاریخ ایجاد'),
        ),
        migrations.AlterField(
            model_name='order',
            name='description',
            field=models.CharField(blank=True, default='', max_length=1000, verbose_name='توضیحات'),
        ),
        migrations.AlterField(
            model_name='order',
            name='dst_currency',
            field=models.IntegerField(choices=[(0, 'unknown'), (1, 'USD'), (2, '﷼'), (10, 'Bitcoin'), (11, 'Ethereum'), (12, 'Litecoin'), (13, 'Tether'), (21, 'Cardano')], verbose_name='ارز مقصد'),
        ),
        migrations.AlterField(
            model_name='order',
            name='execution_type',
            field=models.IntegerField(choices=[(1, 'Limit'), (2, 'Market')], default=1, verbose_name='دستور'),
        ),
        migrations.AlterField(
            model_name='order',
            name='fee',
            field=models.DecimalField(decimal_places=10, default=0, max_digits=20, verbose_name='کارمزد'),
        ),
        migrations.AlterField(
            model_name='order',
            name='matched_amount',
            field=models.DecimalField(decimal_places=10, default=0, max_digits=20, verbose_name='مقدار مچ شده'),
        ),
        migrations.AlterField(
            model_name='order',
            name='order_type',
            field=models.IntegerField(choices=[(1, 'Sell'), (2, 'Buy')], verbose_name='نوع'),
        ),
        migrations.AlterField(
            model_name='order',
            name='price',
            field=models.DecimalField(decimal_places=10, max_digits=20, verbose_name='قیمت واحد'),
        ),
        migrations.AlterField(
            model_name='order',
            name='src_currency',
            field=models.IntegerField(choices=[(0, 'unknown'), (1, 'USD'), (2, '﷼'), (10, 'Bitcoin'), (11, 'Ethereum'), (12, 'Litecoin'), (13, 'Tether'), (21, 'Cardano')], verbose_name='ارز مبدا'),
        ),
        migrations.AlterField(
            model_name='order',
            name='status',
            field=models.IntegerField(choices=[(0, 'New'), (1, 'Active'), (2, 'Done'), (3, 'Canceled')], db_index=True, default=0, verbose_name='وضعیت'),
        ),
        migrations.AlterField(
            model_name='order',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='کاربر'),
        ),
        migrations.AlterUniqueTogether(
            name='ordermatching',
            unique_together={('sell_order', 'buy_order')},
        ),
    ]
