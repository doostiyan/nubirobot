# Generated by Django 4.2.16 on 2024-09-28 08:19
from django.conf import settings
from django.db import migrations, models


def set_limit_on_service_types(apps, schema_editor):
    UserFinancialServiceLimit = apps.get_model('asset_backed_credit', 'UserFinancialServiceLimit')

    UserFinancialServiceLimit.objects.update_or_create(
        tp=110,  # service_type
        user=None,
        user_type=None,
        service=None,
        service_provider=None,
        service_type=1,  # credit
        defaults={'min_limit': 5_000_000, 'limit': None},
    )

    UserFinancialServiceLimit.objects.update_or_create(
        tp=110,  # service_type
        user=None,
        user_type=None,
        service=None,
        service_provider=None,
        service_type=2,  # loan
        defaults={'min_limit': 50_000_000, 'limit': None},
    )

    UserFinancialServiceLimit.objects.update_or_create(
        tp=110,  # service_type
        user=None,
        user_type=None,
        service=None,
        service_provider=None,
        service_type=3,  # debit
        defaults={'min_limit': 10_000, 'limit': None},
    )


class Migration(migrations.Migration):

    dependencies = [
        ('asset_backed_credit', '0035_auto_20241008_1413'),
    ]

    operations = [
        migrations.AlterField(
            model_name='userfinancialservicelimit',
            name='limit',
            field=models.PositiveBigIntegerField(blank=True, null=True),
        ),
        migrations.AddConstraint(
            model_name='userfinancialservicelimit',
            constraint=models.CheckConstraint(
                check=models.Q(('limit__isnull', False), ('min_limit__isnull', False), _connector='OR'),
                name='abc_userfinancialservicelimit_null_checks_on_min_max_limit',
            ),
        ),
    ]
    if settings.IS_PROD:
        operations.append(
            migrations.RunPython(set_limit_on_service_types, reverse_code=migrations.RunPython.noop)
        )
