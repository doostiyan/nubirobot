# Generated by Django 3.2.23 on 2024-02-12 16:02

from decimal import Decimal

import django.core.serializers.json
import django.db.models.deletion
import django.db.models.expressions
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models
from django.db.models import JSONField

import exchange.base.calendar


class Migration(migrations.Migration):

    replaces = [('asset_backed_credit', '0001_initial_squashed_0002_auto_20231118_1717_squashed_0007_merge_20231202_1253'), ('asset_backed_credit', '0002_auto_20231203_2134'), ('asset_backed_credit', '0003_auto_20231210_1540'), ('asset_backed_credit', '0004_auto_20231215_0726'), ('asset_backed_credit', '0005_auto_20231219_2051'), ('asset_backed_credit', '0006_auto_20231225_1427'), ('asset_backed_credit', '0007_auto_20231225_1825'), ('asset_backed_credit', '0008_auto_20231226_1848'), ('asset_backed_credit', '0009_auto_20231227_1058'), ('asset_backed_credit', '0010_auto_20231226_1855'), ('asset_backed_credit', '0011_auto_20240103_1323')]

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('wallet', '0119_merge_20231021_1647'),
        ('market', '0047_auto_20231009_1152'),
        ('wallet', '0121_merge_20231211_1423'),
    ]

    operations = [
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.SmallIntegerField(choices=[(1, 'Tara')], verbose_name='سرویس دهنده')),
                ('tp', models.SmallIntegerField(choices=[(1, 'Credit'), (2, 'Loan'), (3, 'Debit')], verbose_name='نوع سرویس')),
                ('is_active', models.BooleanField(default=False, verbose_name='فعال؟')),
                ('contract_id', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'سرویس اعتباری',
                'verbose_name_plural': 'سرویس\u200cهای اعتباری',
            },
        ),
        migrations.CreateModel(
            name='UserServicePermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, null=True, verbose_name='تاریخ ایجاد مجوز')),
                ('revoked_at', models.DateTimeField(null=True, verbose_name='تاریخ لغو مجوز')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='asset_backed_credit.service', verbose_name='سرویس اعتباری')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='کاربر')),
            ],
            options={
                'verbose_name': 'مجوز سرویس خارجی کاربر',
                'verbose_name_plural': 'مجوزهای سرویس خارجی کاربر',
            },
        ),
        migrations.CreateModel(
            name='UserService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=exchange.base.calendar.ir_now, verbose_name='تاریخ ایجاد')),
                ('closed_at', models.DateTimeField(null=True, verbose_name='تاریخ بسته شدن')),
                ('liquidated_at', models.DateTimeField(null=True, verbose_name='تاریخ تبدیل دارایی ها')),
                ('current_debt', models.DecimalField(decimal_places=10, max_digits=30, verbose_name='بدهی فعلی')),
                ('initial_debt', models.DecimalField(decimal_places=10, max_digits=30, verbose_name='بدهی اولیه')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='asset_backed_credit.service', verbose_name='سرویس اعتباری')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='کاربر')),
                ('user_service_permission', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, related_name='user_service', to='asset_backed_credit.userservicepermission', verbose_name='مجوز')),
                ('account_number', models.CharField(blank=True, max_length=100, verbose_name='شماره کاربری')),
            ],
            options={
                'verbose_name': 'سرویس اعتباری کاربر',
                'verbose_name_plural': 'سرویس اعتباری کاربر',
            },
        ),
        migrations.CreateModel(
            name='SettlementTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=exchange.base.calendar.ir_now, verbose_name='تاریخ ایجاد')),
                ('amount', models.DecimalField(decimal_places=10, max_digits=30, verbose_name='مقدار تراکنش')),
                ('provider_deposit_transaction', models.OneToOneField(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='wallet.transaction', verbose_name='تراکنش تسویه با سرویس\u200cدهنده')),
                ('user_service', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='settlement_transactions', to='asset_backed_credit.userservice', verbose_name='سرویس اعتباری')),
                ('user_withdraw_transaction', models.OneToOneField(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='wallet.transaction', verbose_name='تراکنش تسویه با کاربر')),
            ],
            options={
                'verbose_name': 'تراکنش تسویه',
                'verbose_name_plural': 'تراکنش\u200cهای تسویه',
            },
        ),
        migrations.AddConstraint(
            model_name='userservice',
            constraint=models.CheckConstraint(check=models.Q(('current_debt__lte', django.db.models.expressions.F('initial_debt'))), name='current_debt_limit'),
        ),
        migrations.AddConstraint(
            model_name='settlementtransaction',
            constraint=models.CheckConstraint(check=models.Q(('amount__gt', 0)), name='amount_positivity'),
        ),
        migrations.CreateModel(
            name='OutgoingAPICallLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=exchange.base.calendar.ir_now, verbose_name='زمان ایجاد')),
                ('api_url', models.CharField(max_length=255)),
                ('request_body', JSONField(blank=True, null=True)),
                ('response_body', JSONField(blank=True, null=True)),
                ('response_code', models.SmallIntegerField(verbose_name='کد پاسخ')),
                ('status', models.SmallIntegerField(choices=[(0, 'success'), (1, 'failure')], verbose_name='وضعیت')),
                ('provider', models.SmallIntegerField(choices=[(1, 'تارا')], null=True, verbose_name='ارائه دهنده')),
                ('service', models.SmallIntegerField(choices=[(1, 'اعتبار'), (2, 'وام'), (3, 'دبیت')], null=True, verbose_name='سرویس')),
                ('retry', models.SmallIntegerField(default=0, verbose_name='تکرار فراخوانی')),
                ('user_service', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='asset_backed_credit.userservice', verbose_name='سرویس اعتباری کاربر')),
            ],
            options={
                'verbose_name': 'لاگ صدا کردن سرویس دهنده\u200cهای ثالث',
                'verbose_name_plural': 'لاگ\u200cهای صدا کردن سرویس دهنده\u200cهای ثالث',
            },
        ),
        migrations.CreateModel(
            name='IncomingAPICallLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=exchange.base.calendar.ir_now, verbose_name='زمان ایجاد')),
                ('api_url', models.CharField(max_length=255)),
                ('request_body', JSONField(blank=True, null=True)),
                ('response_body', JSONField(blank=True, null=True)),
                ('response_code', models.SmallIntegerField(verbose_name='کد پاسخ')),
                ('status', models.SmallIntegerField(choices=[(0, 'success'), (1, 'failure')], verbose_name='وضعیت')),
                ('provider', models.SmallIntegerField(choices=[(1, 'تارا')], null=True, verbose_name='ارائه دهنده')),
                ('service', models.SmallIntegerField(choices=[(1, 'اعتبار'), (2, 'وام'), (3, 'دبیت')], null=True, verbose_name='سرویس')),
                ('uid', models.UUIDField(blank=True, editable=False, null=True, unique=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='کاربر')),
                ('user_service', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='asset_backed_credit.userservice', verbose_name='سرویس اعتباری کاربر')),
            ],
            options={
                'verbose_name': 'لاگ صدا شدن توسط سرویس دهنده\u200cهای ثالث',
                'verbose_name_plural': 'لاگ\u200cهای صدا شدن توسط سرویس دهنده\u200cهای ثالث',
            },
        ),
        migrations.CreateModel(
            name='UserFinancialServiceLimit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tp', models.SmallIntegerField(choices=[(1, 'User'), (2, 'UserService'), (3, 'ServiceUserType'), (4, 'Service')])),
                ('user_type', models.SmallIntegerField(blank=True, choices=[(0, 'Normal'), (10, 'Inactive'), (20, 'Suspicious'), (30, 'Blocked'), (40, 'Level0'), (42, 'Level1P'), (44, 'Level1'), (45, 'Trader'), (46, 'Level2'), (90, 'Level3'), (91, 'Active'), (92, 'Trusted'), (99, 'Nobitex'), (100, 'System'), (101, 'Bot'), (102, 'Staff')], null=True)),
                ('limit', models.DecimalField(decimal_places=10, max_digits=30)),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='asset_backed_credit.service')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'محدودیت اعتبار',
                'verbose_name_plural': 'محدودیت\u200cهای اعنبار',
            },
        ),
        migrations.AddConstraint(
            model_name='userfinancialservicelimit',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('user__isnull', True), ('service__isnull', False)), models.Q(('user__isnull', False), ('user_type__isnull', True)), _connector='OR'), name='null_checks'),
        ),
        migrations.AddConstraint(
            model_name='userfinancialservicelimit',
            constraint=models.CheckConstraint(check=models.Q(('limit__gte', Decimal('0'))), name='limit_positivity'),
        ),
        migrations.AddConstraint(
            model_name='userfinancialservicelimit',
            constraint=models.UniqueConstraint(condition=models.Q(('service__isnull', True), ('user_type__isnull', True)), fields=('user_id',), name='unique_per_user_limit'),
        ),
        migrations.AddConstraint(
            model_name='userfinancialservicelimit',
            constraint=models.UniqueConstraint(condition=models.Q(('user_type__isnull', True)), fields=('user_id', 'service_id'), name='unique_per_user_service_limit'),
        ),
        migrations.AddConstraint(
            model_name='userfinancialservicelimit',
            constraint=models.UniqueConstraint(condition=models.Q(('user_id__isnull', True)), fields=('service_id', 'user_type'), name='unique_per_service_user_type_limit'),
        ),
        migrations.AddConstraint(
            model_name='userfinancialservicelimit',
            constraint=models.UniqueConstraint(condition=models.Q(('user_id__isnull', True), ('user_type__isnull', True)), fields=('service_id',), name='unique_per_service'),
        ),
        migrations.AddField(
            model_name='userservicepermission',
            name='user_otp',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='accounts.userotp', verbose_name='کد تایید'),
        ),
        migrations.AlterField(
            model_name='service',
            name='provider',
            field=models.SmallIntegerField(choices=[(1, 'تارا')], verbose_name='سرویس دهنده'),
        ),
        migrations.AlterField(
            model_name='service',
            name='tp',
            field=models.SmallIntegerField(choices=[(1, 'اعتبار'), (2, 'وام'), (3, 'دبیت')], verbose_name='نوع سرویس'),
        ),
        migrations.AlterField(
            model_name='userservicepermission',
            name='revoked_at',
            field=models.DateTimeField(blank=True, null=True, verbose_name='تاریخ لغو مجوز'),
        ),
        migrations.AddConstraint(
            model_name='service',
            constraint=models.UniqueConstraint(condition=models.Q(('is_active', True)), fields=('provider', 'tp'), name='unique_per_active_provider_tp'),
        ),
        migrations.CreateModel(
            name='AssetToDebtMarginCall',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='تاریخ ایجاد')),
                ('total_debt', models.DecimalField(decimal_places=10, max_digits=25, verbose_name='میزان بدهی')),
                ('total_assets', models.DecimalField(decimal_places=10, max_digits=25, verbose_name='میزان دارایی')),
                ('is_sent', models.BooleanField(default=False, verbose_name='ارسال شده؟')),
                ('is_solved', models.BooleanField(default=False, verbose_name='برطرف شده؟')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='کاربر')),
            ],
            options={
                'verbose_name': 'اعلان هشدار مارجین\u200cکال نسبت دارایی به بدهی',
                'verbose_name_plural': 'اعلان\u200cهای هشدار مارجین\u200cکال نسبت دارایی به بدهی',
            },
        ),
        migrations.AddField(
            model_name='assettodebtmargincall',
            name='orders',
            field=models.ManyToManyField(blank=True, related_name='_asset_backed_credit_assettodebtmargincall_orders_+', to='market.Order'),
        ),
        migrations.AddField(
            model_name='settlementtransaction',
            name='orders',
            field=models.ManyToManyField(blank=True, related_name='_asset_backed_credit_settlementtransaction_orders_+', to='market.Order'),
        ),
        migrations.AddField(
            model_name='settlementtransaction',
            name='insurance_withdraw_transaction',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='wallet.transaction', verbose_name='تراکنش کسر از اکانت بیمه\u200cی نوبیتکس'),
        ),
        migrations.AddField(
            model_name='settlementtransaction',
            name='transaction_datetime',
            field=models.DateTimeField(null=True, verbose_name='تاریخ تسویه'),
        ),
        migrations.CreateModel(
            name='UserOperationLock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_released', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'قفل عملیات کاربر',
                'verbose_name_plural': 'قفل عملیات کاربران',
            },
        ),
        migrations.AddConstraint(
            model_name='useroperationlock',
            constraint=models.UniqueConstraint(condition=models.Q(('is_released', False)), fields=('user',), name='unique_active_operation_per_user'),
        ),
        migrations.AddConstraint(
            model_name='userservice',
            constraint=models.CheckConstraint(check=models.Q(('current_debt__gte', Decimal('0'))), name='current_debt_positivity'),
        ),
        migrations.AddConstraint(
            model_name='userservice',
            constraint=models.UniqueConstraint(condition=models.Q(('closed_at__isnull', True)), fields=('user', 'service'), name='unique_active_user_service'),
        ),
        migrations.CreateModel(
            name='DebtChangeLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('amount', models.DecimalField(decimal_places=10, max_digits=30)),
                ('user_service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='asset_backed_credit.userservice')),
            ],
        ),
        migrations.AlterField(
            model_name='settlementtransaction',
            name='insurance_withdraw_transaction',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='wallet.transaction', verbose_name='تراکنش کسر از اکانت بیمه\u200cی نوبیتکس'),
        ),
        migrations.AlterField(
            model_name='settlementtransaction',
            name='provider_deposit_transaction',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='wallet.transaction', verbose_name='تراکنش تسویه با سرویس\u200cدهنده'),
        ),
        migrations.AlterField(
            model_name='settlementtransaction',
            name='user_service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='settlement_transactions', to='asset_backed_credit.userservice', verbose_name='سرویس اعتباری'),
        ),
        migrations.AlterField(
            model_name='settlementtransaction',
            name='user_withdraw_transaction',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='wallet.transaction', verbose_name='تراکنش تسویه با کاربر'),
        ),
        migrations.AlterField(
            model_name='userservice',
            name='user_service_permission',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='user_service', to='asset_backed_credit.userservicepermission', verbose_name='مجوز'),
        ),
        migrations.AlterField(
            model_name='userservicepermission',
            name='user_otp',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.userotp', verbose_name='کد تایید'),
        ),
    ]
