# Generated by Django 2.2.28 on 2023-12-02 09:29

from decimal import Decimal

import django.core.serializers.json
import django.db.models.deletion
import django.db.models.expressions
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models
from django.db.models import JSONField

import exchange.base.calendar


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('wallet', '0119_merge_20231021_1647'),
        ('market', '0047_auto_20231009_1152'),
    ]

    operations = [
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.SmallIntegerField(choices=[(1, 'Tara')], verbose_name='سرویس دهنده')),
                (
                    'tp',
                    models.SmallIntegerField(
                        choices=[(1, 'Credit'), (2, 'Loan'), (3, 'Debit')], verbose_name='نوع سرویس'
                    ),
                ),
                ('is_active', models.BooleanField(default=False, verbose_name='فعال؟')),
                (
                    'credit_limit',
                    models.DecimalField(decimal_places=10, max_digits=30, verbose_name='محدودیت دریافت اعتبار'),
                ),
                ('contract_id', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'سرویس اعتباری',
                'verbose_name_plural': 'سرویس\u200cهای اعتباری',
            },
        ),
        migrations.CreateModel(
            name='UserServicePermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'created_at',
                    models.DateTimeField(default=exchange.base.calendar.ir_now, verbose_name='تاریخ ایجاد مجوز'),
                ),
                ('revoked_at', models.DateTimeField(null=True, verbose_name='تاریخ لغو مجوز')),
                (
                    'service',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to='asset_backed_credit.service',
                        verbose_name='سرویس اعتباری',
                    ),
                ),
                (
                    'user',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='کاربر'
                    ),
                ),
            ],
            options={
                'verbose_name': 'مجوز سرویس خارجی کاربر',
                'verbose_name_plural': 'مجوزهای سرویس خارجی کاربر',
            },
        ),
        migrations.CreateModel(
            name='UserService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=exchange.base.calendar.ir_now, verbose_name='تاریخ ایجاد')),
                ('closed_at', models.DateTimeField(null=True, verbose_name='تاریخ بسته شدن')),
                ('liquidated_at', models.DateTimeField(null=True, verbose_name='تاریخ تبدیل دارایی ها')),
                (
                    'status',
                    models.SmallIntegerField(
                        choices=[
                            (1, 'Active'),
                            (2, 'Closed'),
                            (3, 'Liquidating'),
                            (4, 'PendingWithdraw'),
                            (5, 'Withdrawn'),
                        ],
                        default=1,
                    ),
                ),
                ('current_debt', models.DecimalField(decimal_places=10, max_digits=30, verbose_name='بدهی فعلی')),
                ('initial_debt', models.DecimalField(decimal_places=10, max_digits=30, verbose_name='بدهی اولیه')),
                (
                    'service',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to='asset_backed_credit.Service',
                        verbose_name='سرویس اعتباری',
                    ),
                ),
                (
                    'user',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='کاربر'
                    ),
                ),
                (
                    'user_service_permission',
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='user_service',
                        to='asset_backed_credit.UserServicePermission',
                        verbose_name='مجوز',
                    ),
                ),
            ],
            options={
                'verbose_name': 'سرویس اعتباری کاربر',
                'verbose_name_plural': 'سرویس اعتباری کاربر',
            },
        ),
        migrations.CreateModel(
            name='SettlementTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=exchange.base.calendar.ir_now, verbose_name='تاریخ ایجاد')),
                ('amount', models.DecimalField(decimal_places=10, max_digits=30, verbose_name='مقدار تراکنش')),
                ('user_transaction_datetime', models.DateTimeField(null=True, verbose_name='تاریخ تراکنش کاربر')),
                (
                    'provider_transaction_datetime',
                    models.DateTimeField(null=True, verbose_name='تاریخ تراکنش سرویس\u200cدهنده'),
                ),
                (
                    'provider_deposit_transaction',
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='wallet.Transaction',
                        verbose_name='تراکنش تسویه با سرویس\u200cدهنده',
                    ),
                ),
                (
                    'user_service',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='settlement_transactions',
                        to='asset_backed_credit.UserService',
                        verbose_name='سرویس اعتباری',
                    ),
                ),
                (
                    'user_withdraw_transaction',
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='wallet.Transaction',
                        verbose_name='تراکنش تسویه با کاربر',
                    ),
                ),
            ],
            options={
                'verbose_name': 'تراکنش تسویه',
                'verbose_name_plural': 'تراکنش\u200cهای تسویه',
            },
        ),
        migrations.AddConstraint(
            model_name='userservice',
            constraint=models.CheckConstraint(
                check=models.Q(current_debt__lte=django.db.models.expressions.F('initial_debt')),
                name='current_debt_limit',
            ),
        ),
        migrations.AddConstraint(
            model_name='settlementtransaction',
            constraint=models.CheckConstraint(check=models.Q(amount__gt=0), name='amount_positivity'),
        ),
        migrations.AlterField(
            model_name='service',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='settlementtransaction',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='userservice',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='userservicepermission',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.CreateModel(
            name='OutgoingAPICallLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=exchange.base.calendar.ir_now, verbose_name='زمان ایجاد')),
                ('api_url', models.CharField(max_length=255)),
                ('request_body', JSONField(blank=True, null=True)),
                ('response_body', JSONField(blank=True, null=True)),
                ('response_code', models.SmallIntegerField(verbose_name='کد پاسخ')),
                ('status', models.SmallIntegerField(choices=[(0, 'success'), (1, 'failure')], verbose_name='وضعیت')),
                ('provider', models.SmallIntegerField(choices=[(1, 'Tara')], verbose_name='ارائه دهنده')),
                (
                    'service',
                    models.SmallIntegerField(choices=[(1, 'Credit'), (2, 'Loan'), (3, 'Debit')], verbose_name='سرویس'),
                ),
                ('retry', models.SmallIntegerField(default=0, verbose_name='تکرار فراخوانی')),
                (
                    'user_service',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to='asset_backed_credit.userservice',
                        verbose_name='سرویس اعتباری کاربر',
                    ),
                ),
            ],
            options={
                'verbose_name': 'لاگ صدا کردن سرویس دهنده\u200cهای ثالث',
                'verbose_name_plural': 'لاگ\u200cهای صدا کردن سرویس دهنده\u200cهای ثالث',
            },
        ),
        migrations.CreateModel(
            name='IncomingAPICallLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=exchange.base.calendar.ir_now, verbose_name='زمان ایجاد')),
                ('api_url', models.CharField(max_length=255)),
                ('request_body', JSONField(blank=True, null=True)),
                ('response_body', JSONField(blank=True, null=True)),
                ('response_code', models.SmallIntegerField(verbose_name='کد پاسخ')),
                ('status', models.SmallIntegerField(choices=[(0, 'success'), (1, 'failure')], verbose_name='وضعیت')),
                ('provider', models.SmallIntegerField(choices=[(1, 'Tara')], verbose_name='ارائه دهنده')),
                (
                    'service',
                    models.SmallIntegerField(choices=[(1, 'Credit'), (2, 'Loan'), (3, 'Debit')], verbose_name='سرویس'),
                ),
                ('uid', models.UUIDField(editable=False)),
                (
                    'user',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='کاربر'
                    ),
                ),
                (
                    'user_service',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to='asset_backed_credit.userservice',
                        verbose_name='سرویس اعتباری کاربر',
                    ),
                ),
            ],
            options={
                'verbose_name': 'لاگ صدا شدن توسط سرویس دهنده\u200cهای ثالث',
                'verbose_name_plural': 'لاگ\u200cهای صدا شدن توسط سرویس دهنده\u200cهای ثالث',
                'unique_together': {('user', 'uid', 'provider', 'service')},
            },
        ),
        migrations.RemoveField(
            model_name='service',
            name='credit_limit',
        ),
        migrations.CreateModel(
            name='UserFinancialServiceLimit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'tp',
                    models.SmallIntegerField(
                        choices=[(1, 'User'), (2, 'UserService'), (3, 'ServiceUserType'), (4, 'Service')]
                    ),
                ),
                (
                    'user_type',
                    models.SmallIntegerField(
                        blank=True,
                        choices=[
                            (0, 'Normal'),
                            (10, 'Inactive'),
                            (20, 'Suspicious'),
                            (30, 'Blocked'),
                            (40, 'Level0'),
                            (42, 'Level1P'),
                            (44, 'Level1'),
                            (45, 'Trader'),
                            (46, 'Level2'),
                            (90, 'Level3'),
                            (91, 'Active'),
                            (92, 'Trusted'),
                            (99, 'Nobitex'),
                            (100, 'System'),
                            (101, 'Bot'),
                            (102, 'Staff'),
                        ],
                        null=True,
                    ),
                ),
                ('limit', models.DecimalField(decimal_places=10, max_digits=30)),
                (
                    'service',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to='asset_backed_credit.Service',
                    ),
                ),
                (
                    'user',
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
            options={
                'verbose_name': 'محدودیت اعتبار',
                'verbose_name_plural': 'محدودیت\u200cهای اعنبار',
            },
        ),
        migrations.AddConstraint(
            model_name='userfinancialservicelimit',
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(('user__isnull', True), ('service__isnull', False)),
                    models.Q(('user__isnull', False), ('user_type__isnull', True)),
                    _connector='OR',
                ),
                name='null_checks',
            ),
        ),
        migrations.AddConstraint(
            model_name='userfinancialservicelimit',
            constraint=models.CheckConstraint(check=models.Q(limit__gte=Decimal('0')), name='limit_positivity'),
        ),
        migrations.AddConstraint(
            model_name='userfinancialservicelimit',
            constraint=models.UniqueConstraint(
                condition=models.Q(('service__isnull', True), ('user_type__isnull', True)),
                fields=('user_id',),
                name='unique_per_user_limit',
            ),
        ),
        migrations.AddConstraint(
            model_name='userfinancialservicelimit',
            constraint=models.UniqueConstraint(
                condition=models.Q(user_type__isnull=True),
                fields=('user_id', 'service_id'),
                name='unique_per_user_service_limit',
            ),
        ),
        migrations.AddConstraint(
            model_name='userfinancialservicelimit',
            constraint=models.UniqueConstraint(
                condition=models.Q(user_id__isnull=True),
                fields=('service_id', 'user_type'),
                name='unique_per_service_user_type_limit',
            ),
        ),
        migrations.AddConstraint(
            model_name='userfinancialservicelimit',
            constraint=models.UniqueConstraint(
                condition=models.Q(('user_id__isnull', True), ('user_type__isnull', True)),
                fields=('service_id',),
                name='unique_per_service',
            ),
        ),
        migrations.AddField(
            model_name='userservicepermission',
            name='user_otp',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                to='accounts.userotp',
                verbose_name='کد تایید',
            ),
        ),
        migrations.AlterField(
            model_name='service',
            name='provider',
            field=models.SmallIntegerField(choices=[(1, 'تارا')], verbose_name='سرویس دهنده'),
        ),
        migrations.AlterField(
            model_name='service',
            name='tp',
            field=models.SmallIntegerField(choices=[(1, 'اعتبار'), (2, 'وام'), (3, 'دبیت')], verbose_name='نوع سرویس'),
        ),
        migrations.AlterField(
            model_name='userservicepermission',
            name='created_at',
            field=models.DateTimeField(blank=True, null=True, verbose_name='تاریخ ایجاد مجوز'),
        ),
        migrations.AlterField(
            model_name='userservicepermission',
            name='revoked_at',
            field=models.DateTimeField(blank=True, null=True, verbose_name='تاریخ لغو مجوز'),
        ),
        migrations.AddConstraint(
            model_name='service',
            constraint=models.UniqueConstraint(
                condition=models.Q(is_active=True), fields=('provider', 'tp'), name='unique_per_active_provider_tp'
            ),
        ),
        migrations.CreateModel(
            name='AssetToDebtMarginCall',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='تاریخ ایجاد')),
                ('total_debt', models.DecimalField(decimal_places=10, max_digits=25, verbose_name='میزان بدهی')),
                ('total_assets', models.DecimalField(decimal_places=10, max_digits=25, verbose_name='میزان دارایی')),
                ('is_sent', models.BooleanField(default=False, verbose_name='ارسال شده؟')),
                ('is_solved', models.BooleanField(default=False, verbose_name='برطرف شده؟')),
                (
                    'user',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='کاربر'
                    ),
                ),
            ],
            options={
                'verbose_name': 'اعلان هشدار مارجین\u200cکال نسبت دارایی به بدهی',
                'verbose_name_plural': 'اعلان\u200cهای هشدار مارجین\u200cکال نسبت دارایی به بدهی',
            },
        ),
        migrations.CreateModel(
            name='LiquidationRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'closed')], default=1)),
                ('currencies_amounts', JSONField(encoder=django.core.serializers.json.DjangoJSONEncoder)),
                (
                    'orders',
                    models.ManyToManyField(blank=True, related_name='_liquidationrequest_orders_+', to='market.Order'),
                ),
                (
                    'user_service',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='liquidations',
                        to='asset_backed_credit.UserService',
                    ),
                ),
            ],
            options={
                'verbose_name': 'لیکویدیشن',
                'verbose_name_plural': 'لیکویدیشن\u200cها',
            },
        ),
        migrations.AddConstraint(
            model_name='liquidationrequest',
            constraint=models.UniqueConstraint(
                condition=models.Q(status=1), fields=('user_service',), name='unique_actives_per_user_service'
            ),
        ),
    ]
