# Generated by Django 2.1.4 on 2018-12-12 19:35

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
                ('verification_status', models.IntegerField(choices=[(0, 'None'), (1, 'Basic'), (2, 'Full'), (3, 'Extended')], default=0)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('mobile', models.CharField(blank=True, max_length=12, null=True)),
                ('national_code', models.CharField(blank=True, max_length=12, null=True)),
                ('phone', models.CharField(blank=True, max_length=12, null=True)),
                ('otp', models.CharField(blank=True, max_length=6, null=True)),
                ('otp_expiry', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'User',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='VerificationProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_confirmed', models.BooleanField(default=False)),
                ('phone_confirmed', models.BooleanField(default=False)),
                ('identity_confirmed', models.BooleanField(default=False)),
                ('bank_account_confirmed', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='verification_profile', to=settings.AUTH_USER_MODEL)),
                ('mobile_confirmed', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'احراز هویت',
                'verbose_name_plural': 'احراز هویت',
            },
        ),
        migrations.CreateModel(
            name='BankCard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_number', models.CharField(max_length=16)),
                ('owner_name', models.CharField(max_length=100)),
                ('bank_name', models.CharField(max_length=20)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bank_cards', to=settings.AUTH_USER_MODEL)),
                ('confirmed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='UserPreference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preference', models.CharField(max_length=100)),
                ('value', models.TextField(default='')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='preferences', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='userpreference',
            unique_together={('user', 'preference')},
        ),
        migrations.CreateModel(
            name='UploadedFile',
            fields=[
                ('filename', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_files', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'فایل آپلود شده',
                'verbose_name_plural': 'فایل آپلود شده',
            },
        ),
        migrations.CreateModel(
            name='VerificationRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tp', models.IntegerField(choices=[(1, 'Identity'), (2, 'Address')], verbose_name='Request Type')),
                ('status', models.IntegerField(choices=[(1, 'New'), (2, 'Confirmed'), (3, 'Rejected')], default=1)),
                ('explanations', models.TextField(blank=True, default='')),
                ('documents', models.ManyToManyField(blank=True, related_name='_verificationrequest_documents_+', to='accounts.UploadedFile')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='verification_requests', to=settings.AUTH_USER_MODEL)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'درخواست تایید هویت',
                'verbose_name_plural': 'درخواست تایید هویت',
            },
        ),
        migrations.CreateModel(
            name='UserSms',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('tp', models.IntegerField(choices=[(0, 'Manual SMS'), (1, 'Verify Phone')])),
                ('to', models.CharField(max_length=12)),
                ('text', models.TextField()),
                ('details', models.CharField(blank=True, default='', max_length=100)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_sms_set', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User SMS',
                'verbose_name_plural': 'User SMS',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='otp_type',
            field=models.IntegerField(blank=True, choices=[(1, 'Email'), (2, 'Mobile')], null=True),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=1000)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('is_read', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
                ('sent_to_telegram', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notification',
            },
        ),
        migrations.CreateModel(
            name='LoginAttempt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(blank=True, max_length=100)),
                ('ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('is_successful', models.BooleanField(default=False)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='login_attempts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Login Attempt',
                'verbose_name_plural': 'Login Attempt',
            },
        ),
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_number', models.CharField(max_length=15)),
                ('shaba_number', models.CharField(max_length=26)),
                ('owner_name', models.CharField(max_length=20)),
                ('bank_name', models.CharField(max_length=20)),
                ('confirmed', models.BooleanField(default=False)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='address',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='bankaccount',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bank_accounts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='bankaccount',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, db_index=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='user',
            name='base_fee',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='درصد', max_digits=5, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='logout_threshold',
            field=models.IntegerField(blank=True, help_text='دقیقه', null=True),
        ),
        migrations.AlterField(
            model_name='bankaccount',
            name='owner_name',
            field=models.CharField(max_length=100),
        ),
        migrations.CreateModel(
            name='PasswordRecovery',
            fields=[
                ('token', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('status', models.IntegerField(choices=[(1, 'New'), (2, 'Email'), (3, 'Mobile'), (8, 'Expired'), (9, 'Confirmed')], db_index=True, default=1)),
                ('otp', models.CharField(blank=True, max_length=6, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recovery_records', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'بازیابی گذرواژه',
                'verbose_name_plural': 'بازیابی گذرواژه',
            },
        ),
        migrations.CreateModel(
            name='EmailActivation',
            fields=[
                ('token', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('status', models.IntegerField(choices=[(1, 'New'), (2, 'Used'), (3, 'Expired')], default=1)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_activations', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='telegram_conversation_id',
            field=models.CharField(blank=True, max_length=20, null=True),
        ),
        migrations.AlterModelOptions(
            name='user',
            options={'verbose_name': 'کاربر', 'verbose_name_plural': 'کاربر'},
        ),
        migrations.CreateModel(
            name='UserReferral',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='referral_code',
            field=models.CharField(blank=True, max_length=20, null=True, unique=True),
        ),
        migrations.AddField(
            model_name='userreferral',
            name='child',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='userreferral',
            name='parent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='BankFeesh',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feesh_number', models.CharField(max_length=10)),
                ('bank_name', models.CharField(max_length=20)),
                ('bank_code', models.CharField(max_length=10)),
                ('amount', models.DecimalField(decimal_places=0, default=0, max_digits=20)),
                ('status', models.IntegerField(choices=[(1, 'New'), (2, 'Confirmed'), (3, 'Rejected')], default=1)),
                ('deposited_at', models.DateTimeField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('document', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='bank_feesh_file', to='accounts.UploadedFile')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bank_feesh', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'فیش بانکی',
                'verbose_name_plural': 'فیش بانکی',
            },
        ),
    ]
