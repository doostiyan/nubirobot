name: Test Nobitex Core - TestNet

on:
  workflow_dispatch:

  push:
    branches:
      - master
      - release-*
    paths-ignore:
      - ".github/workflows/*"

  pull_request:
    branches:
      - master
      - release-*
    types:
      - opened
      - synchronize

permissions:
  contents: read

env:
  CIRUNNER: ${{ vars.CIRUNNER }}

concurrency:
  group: ${{github.workflow}}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  Test_Code:
    runs-on: N-EU2-Nobitex-Core-TestNet
    timeout-minutes: 15
    permissions:
      contents: write
      checks: write
      pull-requests: write

    defaults:
      run:
        working-directory: core-${{ github.head_ref || github.ref_name }}

    steps:
      - name: Get Code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref || github.ref_name }}
          path: core-${{ github.head_ref || github.ref_name }}

      - name: Set private repos urls
        run: |
          sed -ie 's/git+ssh\:\/\/git\@github\.com\/nobitex\/app\-config\.git/git+ssh\:\/\/git\@github\.com-app-config\/nobitex\/app\-config\.git/' requirements.txt

      - uses: actions/setup-python@v5
        name: Setup Python
        with:
          python-version: 3.8

      - name: Setup Venv
        run: |
          python3 -m venv core-${{ github.head_ref || github.ref_name }}/venv
          source core-${{ github.head_ref || github.ref_name }}/venv/bin/activate
          echo "VIRTUAL_ENV=${VIRTUAL_ENV}" >> $GITHUB_ENV
          echo "${VIRTUAL_ENV}/bin" >> $GITHUB_PATH

      - name: Install Requirements
        run: |
          pip install pip -r requirements.txt -r requirements-dev.txt -U
          pip install git+ssh://git@github.com-app-config/nobitex/app-config.git@e0fc3c55f4cc0ff7daa55c7deec59b9319b0d953 # Temp, until uncommented from requirements.txt

      - name: Set Custom Git Submodule URLs
        run: |
          git submodule set-url exchange/broker git@github.com-app-exchange-client-queue:nobitex/exchange-queue-client.git &&
          git submodule set-url exchange/blockchain git@github.com-app-blockchain:nobitex/app-blockchain.git
          git submodule set-url exchange/config git@github.com-app-config:nobitex/app-config.git

      - name: Initial Git Submodule
        run: |
          git submodule init

      - name: Update Git Submodule
        run: |
          git submodule update

      - name: Syntax Check
        run: |
          python manage.py check

      - name: Style Check
        continue-on-error: true
        run: |
          ruff check exchange/ --exclude exchange/blockchain/ --target-version py38

      - name: Test Code in Non-Release Branches
        if: github.event_name != 'pull_request' && !startsWith(github.ref, 'refs/heads/release-')
        run: |
          make test

      - name: Test Code in Release Branches
        if: startsWith(github.ref, 'refs/heads/release-')
        run: |
          make test-clean

      - name: Test Code in PR
        if: github.event_name == 'pull_request'
        run: |
          BRANCH_NAME=${{ github.head_ref }} make test-coverage

      - name: Pytest coverage comment
        if: github.event_name == 'pull_request'
        uses: nobitex/pytest-coverage-comment@main
        with:
          pytest-coverage-path: ./pytest-coverage.txt
          junitxml-path: ./coverage.xml
          report-only-changed-files: True
          default-branch: master

      - name: Clear Data From Runner
        if: always()
        run: |
          rm -rf ./*
          rm -rf core-${{ github.head_ref || github.ref_name }}

  deploy-testnet:
    name: Deploy Testnet
    runs-on: deployer
    needs: Test_Code
    if: github.ref == 'refs/heads/master' && github.event_name != 'pull_request'
    steps:
      - name: Call deploy webhook
        run: |
          curl https://ss-nobitex1.nxbo.ir/hooks/testnet/deploy-testapp --header 'Authorization: Token ${{ secrets.DEPLOY_HOOK_TOKEN_TESTAPP }}' --no-progress-meter --fail-with-body
